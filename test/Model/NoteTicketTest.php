<?php
/**
 * NoteTicketTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Qwenta\Fulleapps
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Qwenta\Fulleapps;

use PHPUnit\Framework\TestCase;

/**
 * NoteTicketTest Class Doc Comment
 *
 * @category    Class
 * @description Class NoteTicket
 * @package     Qwenta\Fulleapps
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class NoteTicketTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "NoteTicket"
     */
    public function testNoteTicket()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "comment"
     */
    public function testPropertyComment()
    {
    }

    /**
     * Test attribute "date"
     */
    public function testPropertyDate()
    {
    }

    /**
     * Test attribute "r_note"
     */
    public function testPropertyRNote()
    {
    }

    /**
     * Test attribute "r_ticket"
     */
    public function testPropertyRTicket()
    {
    }

    /**
     * Test attribute "r_invoice"
     */
    public function testPropertyRInvoice()
    {
    }

    /**
     * Test attribute "n_note"
     */
    public function testPropertyNNote()
    {
    }

    /**
     * Test attribute "n_ticket"
     */
    public function testPropertyNTicket()
    {
    }

    /**
     * Test attribute "n_invoice"
     */
    public function testPropertyNInvoice()
    {
    }

    /**
     * Test attribute "n_people"
     */
    public function testPropertyNPeople()
    {
    }

    /**
     * Test attribute "n_table"
     */
    public function testPropertyNTable()
    {
    }

    /**
     * Test attribute "software_version"
     */
    public function testPropertySoftwareVersion()
    {
    }

    /**
     * Test attribute "type_operation"
     */
    public function testPropertyTypeOperation()
    {
    }

    /**
     * Test attribute "type_document"
     */
    public function testPropertyTypeDocument()
    {
    }

    /**
     * Test attribute "n_lines"
     */
    public function testPropertyNLines()
    {
    }

    /**
     * Test attribute "total_ttc"
     */
    public function testPropertyTotalTtc()
    {
    }

    /**
     * Test attribute "total_ht"
     */
    public function testPropertyTotalHt()
    {
    }

    /**
     * Test attribute "total_ca"
     */
    public function testPropertyTotalCa()
    {
    }

    /**
     * Test attribute "reverse"
     */
    public function testPropertyReverse()
    {
    }

    /**
     * Test attribute "reversal"
     */
    public function testPropertyReversal()
    {
    }

    /**
     * Test attribute "id_order"
     */
    public function testPropertyIdOrder()
    {
    }

    /**
     * Test attribute "short_signature"
     */
    public function testPropertyShortSignature()
    {
    }

    /**
     * Test attribute "picture_base64"
     */
    public function testPropertyPictureBase64()
    {
    }

    /**
     * Test attribute "picture_link"
     */
    public function testPropertyPictureLink()
    {
    }

    /**
     * Test attribute "point_value"
     */
    public function testPropertyPointValue()
    {
    }

    /**
     * Test attribute "operator"
     */
    public function testPropertyOperator()
    {
    }

    /**
     * Test attribute "client"
     */
    public function testPropertyClient()
    {
    }

    /**
     * Test attribute "sale_method"
     */
    public function testPropertySaleMethod()
    {
    }

    /**
     * Test attribute "service"
     */
    public function testPropertyService()
    {
    }

    /**
     * Test attribute "point_of_sale"
     */
    public function testPropertyPointOfSale()
    {
    }

    /**
     * Test attribute "attributes"
     */
    public function testPropertyAttributes()
    {
    }

    /**
     * Test attribute "taxes"
     */
    public function testPropertyTaxes()
    {
    }

    /**
     * Test attribute "details"
     */
    public function testPropertyDetails()
    {
    }

    /**
     * Test attribute "payments"
     */
    public function testPropertyPayments()
    {
    }
}
