<?php
/**
 * ProductTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * ProductTest Class Doc Comment
 *
 * @category    Class
 * @description Class Product
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Product"
     */
    public function testProduct()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "short_name"
     */
    public function testPropertyShortName()
    {
    }

    /**
     * Test attribute "order_name"
     */
    public function testPropertyOrderName()
    {
    }

    /**
     * Test attribute "rubric"
     */
    public function testPropertyRubric()
    {
    }

    /**
     * Test attribute "image"
     */
    public function testPropertyImage()
    {
    }

    /**
     * Test attribute "archive"
     */
    public function testPropertyArchive()
    {
    }

    /**
     * Test attribute "barcodes"
     */
    public function testPropertyBarcodes()
    {
    }

    /**
     * Test attribute "product_type"
     */
    public function testPropertyProductType()
    {
    }

    /**
     * Test attribute "free_price"
     */
    public function testPropertyFreePrice()
    {
    }

    /**
     * Test attribute "blocked"
     */
    public function testPropertyBlocked()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "optional_selection"
     */
    public function testPropertyOptionalSelection()
    {
    }

    /**
     * Test attribute "points"
     */
    public function testPropertyPoints()
    {
    }

    /**
     * Test attribute "fidelity_points"
     */
    public function testPropertyFidelityPoints()
    {
    }

    /**
     * Test attribute "expiration"
     */
    public function testPropertyExpiration()
    {
    }

    /**
     * Test attribute "enable_comment"
     */
    public function testPropertyEnableComment()
    {
    }

    /**
     * Test attribute "minimum_stock"
     */
    public function testPropertyMinimumStock()
    {
    }

    /**
     * Test attribute "cost_price"
     */
    public function testPropertyCostPrice()
    {
    }

    /**
     * Test attribute "weight"
     */
    public function testPropertyWeight()
    {
    }

    /**
     * Test attribute "volume"
     */
    public function testPropertyVolume()
    {
    }

    /**
     * Test attribute "prices"
     */
    public function testPropertyPrices()
    {
    }

    /**
     * Test attribute "categories"
     */
    public function testPropertyCategories()
    {
    }

    /**
     * Test attribute "barcode_variations"
     */
    public function testPropertyBarcodeVariations()
    {
    }

    /**
     * Test attribute "allergens"
     */
    public function testPropertyAllergens()
    {
    }
}
