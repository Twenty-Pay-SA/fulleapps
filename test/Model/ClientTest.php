<?php
/**
 * ClientTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * ClientTest Class Doc Comment
 *
 * @category    Class
 * @description Class Client
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ClientTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Client"
     */
    public function testClient()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "category"
     */
    public function testPropertyCategory()
    {
    }

    /**
     * Test attribute "civility"
     */
    public function testPropertyCivility()
    {
    }

    /**
     * Test attribute "firstname"
     */
    public function testPropertyFirstname()
    {
    }

    /**
     * Test attribute "lastname"
     */
    public function testPropertyLastname()
    {
    }

    /**
     * Test attribute "fullname"
     */
    public function testPropertyFullname()
    {
    }

    /**
     * Test attribute "society"
     */
    public function testPropertySociety()
    {
    }

    /**
     * Test attribute "reference"
     */
    public function testPropertyReference()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "mail"
     */
    public function testPropertyMail()
    {
    }

    /**
     * Test attribute "mail_2"
     */
    public function testPropertyMail2()
    {
    }

    /**
     * Test attribute "phone"
     */
    public function testPropertyPhone()
    {
    }

    /**
     * Test attribute "phone_2"
     */
    public function testPropertyPhone2()
    {
    }

    /**
     * Test attribute "phone_country"
     */
    public function testPropertyPhoneCountry()
    {
    }

    /**
     * Test attribute "phone_2_country"
     */
    public function testPropertyPhone2Country()
    {
    }

    /**
     * Test attribute "address"
     */
    public function testPropertyAddress()
    {
    }

    /**
     * Test attribute "postal"
     */
    public function testPropertyPostal()
    {
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
    }

    /**
     * Test attribute "birthday"
     */
    public function testPropertyBirthday()
    {
    }

    /**
     * Test attribute "tax_identification"
     */
    public function testPropertyTaxIdentification()
    {
    }

    /**
     * Test attribute "company_identification"
     */
    public function testPropertyCompanyIdentification()
    {
    }

    /**
     * Test attribute "activity_identification"
     */
    public function testPropertyActivityIdentification()
    {
    }

    /**
     * Test attribute "group"
     */
    public function testPropertyGroup()
    {
    }

    /**
     * Test attribute "addresses"
     */
    public function testPropertyAddresses()
    {
    }

    /**
     * Test attribute "client_attributes"
     */
    public function testPropertyClientAttributes()
    {
    }

    /**
     * Test attribute "archive"
     */
    public function testPropertyArchive()
    {
    }

    /**
     * Test attribute "send_by_mail"
     */
    public function testPropertySendByMail()
    {
    }

    /**
     * Test attribute "enable_marketing"
     */
    public function testPropertyEnableMarketing()
    {
    }
}
