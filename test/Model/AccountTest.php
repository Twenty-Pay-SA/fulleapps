<?php
/**
 * AccountTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Qwenta\Fulleapps
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Qwenta\Fulleapps;

use PHPUnit\Framework\TestCase;

/**
 * AccountTest Class Doc Comment
 *
 * @category    Class
 * @description Class Account
 * @package     Qwenta\Fulleapps
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AccountTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Account"
     */
    public function testAccount()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "activate"
     */
    public function testPropertyActivate()
    {
    }

    /**
     * Test attribute "is_trial"
     */
    public function testPropertyIsTrial()
    {
    }

    /**
     * Test attribute "id_activity"
     */
    public function testPropertyIdActivity()
    {
    }

    /**
     * Test attribute "people_attribute"
     */
    public function testPropertyPeopleAttribute()
    {
    }

    /**
     * Test attribute "table_attribute"
     */
    public function testPropertyTableAttribute()
    {
    }

    /**
     * Test attribute "id_agency"
     */
    public function testPropertyIdAgency()
    {
    }

    /**
     * Test attribute "accountant_code"
     */
    public function testPropertyAccountantCode()
    {
    }

    /**
     * Test attribute "id_stripe_subscription"
     */
    public function testPropertyIdStripeSubscription()
    {
    }

    /**
     * Test attribute "inscription"
     */
    public function testPropertyInscription()
    {
    }

    /**
     * Test attribute "expiration"
     */
    public function testPropertyExpiration()
    {
    }

    /**
     * Test attribute "denomination"
     */
    public function testPropertyDenomination()
    {
    }

    /**
     * Test attribute "mail"
     */
    public function testPropertyMail()
    {
    }

    /**
     * Test attribute "mail_subscription"
     */
    public function testPropertyMailSubscription()
    {
    }

    /**
     * Test attribute "firstname"
     */
    public function testPropertyFirstname()
    {
    }

    /**
     * Test attribute "lastname"
     */
    public function testPropertyLastname()
    {
    }

    /**
     * Test attribute "address"
     */
    public function testPropertyAddress()
    {
    }

    /**
     * Test attribute "postal"
     */
    public function testPropertyPostal()
    {
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
    }

    /**
     * Test attribute "website"
     */
    public function testPropertyWebsite()
    {
    }

    /**
     * Test attribute "reference"
     */
    public function testPropertyReference()
    {
    }

    /**
     * Test attribute "webhook"
     */
    public function testPropertyWebhook()
    {
    }

    /**
     * Test attribute "mobile"
     */
    public function testPropertyMobile()
    {
    }

    /**
     * Test attribute "max_devices"
     */
    public function testPropertyMaxDevices()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
    }

    /**
     * Test attribute "licence"
     */
    public function testPropertyLicence()
    {
    }

    /**
     * Test attribute "resaler"
     */
    public function testPropertyResaler()
    {
    }
}
