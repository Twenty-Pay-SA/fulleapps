<?php
/**
 * SaleMethodTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * SaleMethodTest Class Doc Comment
 *
 * @category    Class
 * @description Class TvaRate
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SaleMethodTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SaleMethod"
     */
    public function testSaleMethod()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "archive"
     */
    public function testPropertyArchive()
    {
    }

    /**
     * Test attribute "enable_note"
     */
    public function testPropertyEnableNote()
    {
    }

    /**
     * Test attribute "kitchen_level"
     */
    public function testPropertyKitchenLevel()
    {
    }

    /**
     * Test attribute "auto_open"
     */
    public function testPropertyAutoOpen()
    {
    }

    /**
     * Test attribute "ticket_delivery"
     */
    public function testPropertyTicketDelivery()
    {
    }

    /**
     * Test attribute "enable_order"
     */
    public function testPropertyEnableOrder()
    {
    }

    /**
     * Test attribute "enable_online_order"
     */
    public function testPropertyEnableOnlineOrder()
    {
    }

    /**
     * Test attribute "enable_billing_address"
     */
    public function testPropertyEnableBillingAddress()
    {
    }

    /**
     * Test attribute "enable_date_hour"
     */
    public function testPropertyEnableDateHour()
    {
    }

    /**
     * Test attribute "enable_delivery"
     */
    public function testPropertyEnableDelivery()
    {
    }

    /**
     * Test attribute "enable_shipping_cost"
     */
    public function testPropertyEnableShippingCost()
    {
    }

    /**
     * Test attribute "enable_online_payment"
     */
    public function testPropertyEnableOnlinePayment()
    {
    }

    /**
     * Test attribute "enable_counter_payment"
     */
    public function testPropertyEnableCounterPayment()
    {
    }

    /**
     * Test attribute "enable_secure_counter_payment"
     */
    public function testPropertyEnableSecureCounterPayment()
    {
    }

    /**
     * Test attribute "minimum_order"
     */
    public function testPropertyMinimumOrder()
    {
    }

    /**
     * Test attribute "limit_order_slot"
     */
    public function testPropertyLimitOrderSlot()
    {
    }

    /**
     * Test attribute "order_slot"
     */
    public function testPropertyOrderSlot()
    {
    }

    /**
     * Test attribute "limit_order_gap"
     */
    public function testPropertyLimitOrderGap()
    {
    }
}
