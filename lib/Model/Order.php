<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fulle API
 *
 * <strong>IMPORTANT !<br/>Les requetes externes vers l'API sont susceptibles d'être interrompues en cas de trafic fort sur le serveur !<br/>  Pour éviter ce genre de contraintes, nous pouvons vous intégrer dans notre programme partenaire et vous définir un identifiant Partner, afin de permettre une disponibilité continue de l'API.<br/>  L'identifiant Partner sera à insérer dans un header 'X-Api-Key' : '%ID_PARTNER%'</strong><br/><br/> Pour utiliser l'API en externe, vous devez utiliser la clé utilisateur unique de votre compte commerçant.<br/> Cette clé est disponible à la demande auprés de votre revendeur.<br/> Une fois la clé obtenue, utilisez celle ci dans un header Authorization afin de récupérer et gérer les données de compte via notre API REST.<br/> Pour utiliser l'API avec votre clé, voici un exemple du header à placer : <br/> 'Authorization' : 'Mutual %CLE_UTILISATEUR%'<br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fulleapps.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Qwenta\Fulleapps\Model;

use \ArrayAccess;
use \Qwenta\Fulleapps\ObjectSerializer;

/**
 * Order Class Doc Comment
 *
 * @category Class
 * @description Class Order
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Order implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => '',
        'reference' => '',
        'comment' => '\Qwenta\Fulleapps\Model\OrderComment',
        'link' => '',
        'sticker_link' => '',
        'date_creation' => '\Qwenta\Fulleapps\Model\OrderDateCreation',
        'date_execution' => '\Qwenta\Fulleapps\Model\OrderDateExecution',
        'hour_execution' => '\Qwenta\Fulleapps\Model\OrderHourExecution',
        'total' => '\Qwenta\Fulleapps\Model\OrderTotal',
        'n_people' => '',
        'n_table' => '',
        'sale_method' => '\Qwenta\Fulleapps\Model\SaleMethod',
        'operator' => '\Qwenta\Fulleapps\Model\Operator',
        'order_level' => '\Qwenta\Fulleapps\Model\OrderLevel',
        'time_slot' => '\Qwenta\Fulleapps\Model\OrderTimeSlot',
        'level_history' => '\Qwenta\Fulleapps\Model\OrderLevelHistories',
        'attributes' => '\Qwenta\Fulleapps\Model\Attributes',
        'billing_address' => '\Qwenta\Fulleapps\Model\ClientAddress',
        'destination_address' => '\Qwenta\Fulleapps\Model\ClientAddress',
        'client' => '\Qwenta\Fulleapps\Model\Client',
        'client_receiver' => '\Qwenta\Fulleapps\Model\Client',
        'details' => '\Qwenta\Fulleapps\Model\OrderDetails'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int',
        'reference' => 'string',
        'comment' => null,
        'link' => 'string',
        'sticker_link' => 'string',
        'date_creation' => null,
        'date_execution' => null,
        'hour_execution' => null,
        'total' => null,
        'n_people' => 'int',
        'n_table' => 'int',
        'sale_method' => null,
        'operator' => null,
        'order_level' => null,
        'time_slot' => null,
        'level_history' => null,
        'attributes' => null,
        'billing_address' => null,
        'destination_address' => null,
        'client' => null,
        'client_receiver' => null,
        'details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'reference' => 'reference',
        'comment' => 'comment',
        'link' => 'link',
        'sticker_link' => 'sticker_link',
        'date_creation' => 'date_creation',
        'date_execution' => 'date_execution',
        'hour_execution' => 'hour_execution',
        'total' => 'total',
        'n_people' => 'n_people',
        'n_table' => 'n_table',
        'sale_method' => 'sale_method',
        'operator' => 'operator',
        'order_level' => 'order_level',
        'time_slot' => 'time_slot',
        'level_history' => 'level_history',
        'attributes' => 'attributes',
        'billing_address' => 'billing_address',
        'destination_address' => 'destination_address',
        'client' => 'client',
        'client_receiver' => 'client_receiver',
        'details' => 'details'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'reference' => 'setReference',
        'comment' => 'setComment',
        'link' => 'setLink',
        'sticker_link' => 'setStickerLink',
        'date_creation' => 'setDateCreation',
        'date_execution' => 'setDateExecution',
        'hour_execution' => 'setHourExecution',
        'total' => 'setTotal',
        'n_people' => 'setNPeople',
        'n_table' => 'setNTable',
        'sale_method' => 'setSaleMethod',
        'operator' => 'setOperator',
        'order_level' => 'setOrderLevel',
        'time_slot' => 'setTimeSlot',
        'level_history' => 'setLevelHistory',
        'attributes' => 'setAttributes',
        'billing_address' => 'setBillingAddress',
        'destination_address' => 'setDestinationAddress',
        'client' => 'setClient',
        'client_receiver' => 'setClientReceiver',
        'details' => 'setDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'reference' => 'getReference',
        'comment' => 'getComment',
        'link' => 'getLink',
        'sticker_link' => 'getStickerLink',
        'date_creation' => 'getDateCreation',
        'date_execution' => 'getDateExecution',
        'hour_execution' => 'getHourExecution',
        'total' => 'getTotal',
        'n_people' => 'getNPeople',
        'n_table' => 'getNTable',
        'sale_method' => 'getSaleMethod',
        'operator' => 'getOperator',
        'order_level' => 'getOrderLevel',
        'time_slot' => 'getTimeSlot',
        'level_history' => 'getLevelHistory',
        'attributes' => 'getAttributes',
        'billing_address' => 'getBillingAddress',
        'destination_address' => 'getDestinationAddress',
        'client' => 'getClient',
        'client_receiver' => 'getClientReceiver',
        'details' => 'getDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['link'] = isset($data['link']) ? $data['link'] : null;
        $this->container['sticker_link'] = isset($data['sticker_link']) ? $data['sticker_link'] : null;
        $this->container['date_creation'] = isset($data['date_creation']) ? $data['date_creation'] : null;
        $this->container['date_execution'] = isset($data['date_execution']) ? $data['date_execution'] : null;
        $this->container['hour_execution'] = isset($data['hour_execution']) ? $data['hour_execution'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['n_people'] = isset($data['n_people']) ? $data['n_people'] : null;
        $this->container['n_table'] = isset($data['n_table']) ? $data['n_table'] : null;
        $this->container['sale_method'] = isset($data['sale_method']) ? $data['sale_method'] : null;
        $this->container['operator'] = isset($data['operator']) ? $data['operator'] : null;
        $this->container['order_level'] = isset($data['order_level']) ? $data['order_level'] : null;
        $this->container['time_slot'] = isset($data['time_slot']) ? $data['time_slot'] : null;
        $this->container['level_history'] = isset($data['level_history']) ? $data['level_history'] : null;
        $this->container['attributes'] = isset($data['attributes']) ? $data['attributes'] : null;
        $this->container['billing_address'] = isset($data['billing_address']) ? $data['billing_address'] : null;
        $this->container['destination_address'] = isset($data['destination_address']) ? $data['destination_address'] : null;
        $this->container['client'] = isset($data['client']) ? $data['client'] : null;
        $this->container['client_receiver'] = isset($data['client_receiver']) ? $data['client_receiver'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return 
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param  $id Identifiant
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return 
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param  $reference Référence unique de la commande
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return \Qwenta\Fulleapps\Model\OrderComment
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param \Qwenta\Fulleapps\Model\OrderComment $comment comment
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets link
     *
     * @return 
     */
    public function getLink()
    {
        return $this->container['link'];
    }

    /**
     * Sets link
     *
     * @param  $link URL de la commande au format A4
     *
     * @return $this
     */
    public function setLink($link)
    {
        $this->container['link'] = $link;

        return $this;
    }

    /**
     * Gets sticker_link
     *
     * @return 
     */
    public function getStickerLink()
    {
        return $this->container['sticker_link'];
    }

    /**
     * Sets sticker_link
     *
     * @param  $sticker_link URL de la commande au format étiquette
     *
     * @return $this
     */
    public function setStickerLink($sticker_link)
    {
        $this->container['sticker_link'] = $sticker_link;

        return $this;
    }

    /**
     * Gets date_creation
     *
     * @return \Qwenta\Fulleapps\Model\OrderDateCreation
     */
    public function getDateCreation()
    {
        return $this->container['date_creation'];
    }

    /**
     * Sets date_creation
     *
     * @param \Qwenta\Fulleapps\Model\OrderDateCreation $date_creation date_creation
     *
     * @return $this
     */
    public function setDateCreation($date_creation)
    {
        $this->container['date_creation'] = $date_creation;

        return $this;
    }

    /**
     * Gets date_execution
     *
     * @return \Qwenta\Fulleapps\Model\OrderDateExecution
     */
    public function getDateExecution()
    {
        return $this->container['date_execution'];
    }

    /**
     * Sets date_execution
     *
     * @param \Qwenta\Fulleapps\Model\OrderDateExecution $date_execution date_execution
     *
     * @return $this
     */
    public function setDateExecution($date_execution)
    {
        $this->container['date_execution'] = $date_execution;

        return $this;
    }

    /**
     * Gets hour_execution
     *
     * @return \Qwenta\Fulleapps\Model\OrderHourExecution
     */
    public function getHourExecution()
    {
        return $this->container['hour_execution'];
    }

    /**
     * Sets hour_execution
     *
     * @param \Qwenta\Fulleapps\Model\OrderHourExecution $hour_execution hour_execution
     *
     * @return $this
     */
    public function setHourExecution($hour_execution)
    {
        $this->container['hour_execution'] = $hour_execution;

        return $this;
    }

    /**
     * Gets total
     *
     * @return \Qwenta\Fulleapps\Model\OrderTotal
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param \Qwenta\Fulleapps\Model\OrderTotal $total total
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets n_people
     *
     * @return 
     */
    public function getNPeople()
    {
        return $this->container['n_people'];
    }

    /**
     * Sets n_people
     *
     * @param  $n_people Nombre de convives
     *
     * @return $this
     */
    public function setNPeople($n_people)
    {
        $this->container['n_people'] = $n_people;

        return $this;
    }

    /**
     * Gets n_table
     *
     * @return 
     */
    public function getNTable()
    {
        return $this->container['n_table'];
    }

    /**
     * Sets n_table
     *
     * @param  $n_table Numéro de table
     *
     * @return $this
     */
    public function setNTable($n_table)
    {
        $this->container['n_table'] = $n_table;

        return $this;
    }

    /**
     * Gets sale_method
     *
     * @return \Qwenta\Fulleapps\Model\SaleMethod
     */
    public function getSaleMethod()
    {
        return $this->container['sale_method'];
    }

    /**
     * Sets sale_method
     *
     * @param \Qwenta\Fulleapps\Model\SaleMethod $sale_method sale_method
     *
     * @return $this
     */
    public function setSaleMethod($sale_method)
    {
        $this->container['sale_method'] = $sale_method;

        return $this;
    }

    /**
     * Gets operator
     *
     * @return \Qwenta\Fulleapps\Model\Operator
     */
    public function getOperator()
    {
        return $this->container['operator'];
    }

    /**
     * Sets operator
     *
     * @param \Qwenta\Fulleapps\Model\Operator $operator operator
     *
     * @return $this
     */
    public function setOperator($operator)
    {
        $this->container['operator'] = $operator;

        return $this;
    }

    /**
     * Gets order_level
     *
     * @return \Qwenta\Fulleapps\Model\OrderLevel
     */
    public function getOrderLevel()
    {
        return $this->container['order_level'];
    }

    /**
     * Sets order_level
     *
     * @param \Qwenta\Fulleapps\Model\OrderLevel $order_level order_level
     *
     * @return $this
     */
    public function setOrderLevel($order_level)
    {
        $this->container['order_level'] = $order_level;

        return $this;
    }

    /**
     * Gets time_slot
     *
     * @return \Qwenta\Fulleapps\Model\OrderTimeSlot
     */
    public function getTimeSlot()
    {
        return $this->container['time_slot'];
    }

    /**
     * Sets time_slot
     *
     * @param \Qwenta\Fulleapps\Model\OrderTimeSlot $time_slot time_slot
     *
     * @return $this
     */
    public function setTimeSlot($time_slot)
    {
        $this->container['time_slot'] = $time_slot;

        return $this;
    }

    /**
     * Gets level_history
     *
     * @return \Qwenta\Fulleapps\Model\OrderLevelHistories
     */
    public function getLevelHistory()
    {
        return $this->container['level_history'];
    }

    /**
     * Sets level_history
     *
     * @param \Qwenta\Fulleapps\Model\OrderLevelHistories $level_history level_history
     *
     * @return $this
     */
    public function setLevelHistory($level_history)
    {
        $this->container['level_history'] = $level_history;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return \Qwenta\Fulleapps\Model\Attributes
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param \Qwenta\Fulleapps\Model\Attributes $attributes attributes
     *
     * @return $this
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets billing_address
     *
     * @return \Qwenta\Fulleapps\Model\ClientAddress
     */
    public function getBillingAddress()
    {
        return $this->container['billing_address'];
    }

    /**
     * Sets billing_address
     *
     * @param \Qwenta\Fulleapps\Model\ClientAddress $billing_address billing_address
     *
     * @return $this
     */
    public function setBillingAddress($billing_address)
    {
        $this->container['billing_address'] = $billing_address;

        return $this;
    }

    /**
     * Gets destination_address
     *
     * @return \Qwenta\Fulleapps\Model\ClientAddress
     */
    public function getDestinationAddress()
    {
        return $this->container['destination_address'];
    }

    /**
     * Sets destination_address
     *
     * @param \Qwenta\Fulleapps\Model\ClientAddress $destination_address destination_address
     *
     * @return $this
     */
    public function setDestinationAddress($destination_address)
    {
        $this->container['destination_address'] = $destination_address;

        return $this;
    }

    /**
     * Gets client
     *
     * @return \Qwenta\Fulleapps\Model\Client
     */
    public function getClient()
    {
        return $this->container['client'];
    }

    /**
     * Sets client
     *
     * @param \Qwenta\Fulleapps\Model\Client $client client
     *
     * @return $this
     */
    public function setClient($client)
    {
        $this->container['client'] = $client;

        return $this;
    }

    /**
     * Gets client_receiver
     *
     * @return \Qwenta\Fulleapps\Model\Client
     */
    public function getClientReceiver()
    {
        return $this->container['client_receiver'];
    }

    /**
     * Sets client_receiver
     *
     * @param \Qwenta\Fulleapps\Model\Client $client_receiver client_receiver
     *
     * @return $this
     */
    public function setClientReceiver($client_receiver)
    {
        $this->container['client_receiver'] = $client_receiver;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \Qwenta\Fulleapps\Model\OrderDetails
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \Qwenta\Fulleapps\Model\OrderDetails $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
